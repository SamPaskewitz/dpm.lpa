knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 5,
fig.height = 4)
library(dpm.lpa)
# To build: devtools::build_vignettes()
update_python_packages()
data(lpa_example_data)
x = as.data.frame(scale(lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')]))
fitted_lpa = fit_dpm_lpa(x = x)
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = as.data.frame(scale(lpa_example_data[, c('math', 'reading', 'gym')])))
result$bayes_factors
reticulate::repl_python()
result$plot
profiles = extract_profiles(fitted_lpa_v2)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
row.names(result$bayes_factors)
pd = import(pandas)
pd = import("pandas")
foo = pd$DataFrame({'a': [0,0], 'b': [1,1]})
reticulate::repl_python()
as.data.frame(scale(lpa_example_data[, c('math', 'reading', 'gym')]))
names(result)
foo = as.data.frame(scale(lpa_example_data[, c('math', 'reading', 'gym')]))
reticulate::repl_python()
result$plot
reticulate::repl_python()
profiles = extract_profiles(fitted_lpa_v2)
result$plot_df
reticulate::repl_python()
#update_python_packages()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 5,
fig.height = 4)
library(dpm.lpa)
# To build: devtools::build_vignettes()
#update_python_packages()
data(lpa_example_data)
x = as.data.frame(scale(lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')]))
fitted_lpa = fit_dpm_lpa(x = x)
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = as.data.frame(scale(lpa_example_data[, c('math', 'reading', 'gym')])))
result$bayes_factors
reticulate::repl_python()
result$plot
result$plot_df
result$bayes_factors
library(dpm.lpa)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 5,
fig.height = 4)
library(dpm.lpa)
# To build: devtools::build_vignettes()
#update_python_packages()
data(lpa_example_data)
x = as.data.frame(scale(lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')]))
fitted_lpa = fit_dpm_lpa(x = x)
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = as.data.frame(scale(lpa_example_data[, c('math', 'reading', 'gym')])))
result$bayes_factors
reticulate::repl_python()
result$plot
result$plot_df
write.csv(lpa_example_data, 'lpa_example_data.csv')
library(dpm.lpa)
# To build: devtools::build_vignettes()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 5,
fig.height = 4)
update_python_packages()
library(dpm.lpa)
# To build: devtools::build_vignettes()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.width = 5,
fig.height = 4)
library(dpm.lpa)
# To build: devtools::build_vignettes()
#update_python_packages()
data(lpa_example_data)
x = as.data.frame(scale(lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')]))
fitted_lpa = fit_dpm_lpa(x = x)
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = as.data.frame(scale(lpa_example_data[, c('math', 'reading', 'gym')])))
result$bayes_factors
reticulate::repl_python()
