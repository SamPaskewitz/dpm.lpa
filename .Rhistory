result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$bayes_factors
result$plot$show()
result$plot
library(dpm.lpa)
0.09 + 0.26
dbinom(0:4, 4, 0.6)
dbinom(0:4, 4, 0.7)
round(dbinom(0:4, 4, 0.7), 2)
round(pbinom(0:4, 4, 0.7), 2)
round(pbinom(0:4, 4, 0.7), 3)
round(pbinom(0:4, 4, 0.7), 4)
round(dbinom(0:4, 4, 0.7), 4)
round(pbinom(0:4, 4, 0.7), 3)
round(dbinom(0:4, 4, 0.7), 3)
sum(round(dbinom(0:4, 4, 0.7), 3))
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$bayes_factors
result$plot
result$plot_df
result$plot + facet_wrap(vars(.data[["variable"]]))
result$plot + facet_wrap(vars(.data[["profile"]]))
library(dpm.lpa)
library(dpm.lpa)
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$bayes_factors
result$plot# + facet_wrap(vars(.data[["profile"]]))
result$plot_df
ifelse('variable' == 'variable', 'profile', 'variable')
ifelse('nein' == 'variable', 'profile', 'variable')
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$bayes_factors
result$plot# + facet_wrap(vars(.data[["profile"]]))
result$plot_df
result = outcome_analysis_normal(model = fitted_lpa_v2,
facet_var = 'profile',
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$plot
devtools::install(dependencies = TRUE, build_vignettes = TRUE)
devtools::install(dependencies = TRUE, build_vignettes = TRUE)
??vignettes
browseVignettes('dpm.lpa')
plot_lpa_residuals(fitted_lpa, ncol = 5)
devtools::install(dependencies = TRUE, build_vignettes = TRUE)
library(dpm.lpa)
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa, ncol = 5)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$bayes_factors
result$plot
result$plot_df
sima = profile_similarity(fitted_lpa_v2)
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa, ncol = 5)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$bayes_factors
result$plot
result$plot_df
sima = profile_similarity(fitted_lpa_v2)
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa, ncol = 5)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$bayes_factors
result$plot
result$plot_df
usethis::use_vignette("outcome_analysis")
save(fitted_lpa_v2, file = 'fitted LPA model (v2).rds')
rm(fitted_lpa_v2)
rm(lpa_example_data)
data("lpa_example_data")
data("fitted_lpa_v2")
View(lpa_example_data)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
load("fitted_lpa_v2")
load("data/fitted_lpa_v2")
laod("data.fitted_lpa_v2")
load("data.fitted_lpa_v2")
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
save(fitted_lpa_v2, 'data/fitted_lpa_v2.rda')
save(, fitted_lpa_v2)
?save
save(fitted_lpa_v2, file = 'data/fitted_lpa_v2.rda')
save(fitted_lpa_v2, file = 'data/fitted_lpa_v2.rda')
save(fitted_lpa_v2, file = 'data/fitted_lpa_v2.rda')
load(file = 'data/fitted_lpa_v2.rda')
m = lm(math ~ reading, data = lpa_example_data)
save(m, 'data/fitted_lpa_v2.rda')
save(m, file = 'data/fitted_lpa_v2.rda')
load(file = 'data/fitted_lpa_v2.rda')
rm(m)
load(file = 'data/fitted_lpa_v2.rda')
rm(m)
load(file = 'data/fitted_lpa_v2.rda')
foo = profile_similarity(fitted_lpa_v2)
library(dpm.lpa)
foo = profile_similarity(fitted_lpa_v2)
plot_lpa_residuals(fitted_lpa, ncol = 2)
plot_lpa_residuals(fitted_lpa_v2, ncol = 2)
rm(fitted_lpa_v2)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa, ncol = 2)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2, ncol = 2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
foo = profile_similarity(fitted_lpa_v2)
library(dpm.lpa)
foo = profile_similarity(fitted_lpa_v2)
foo = profile_similarity(fitted_lpa_v2)
fitted_lpa_v2$profile_similarity()
fitted_lpa_v2$print_summary()
fitted_lpa$print_summary()
library(dpm.lpa)
fitted_lpa$print_summary()
library(dpm.lpa)
lpa_residual_correlations(fitted_lpa_v2)
library(dpm.lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa, ncol = 2)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2, ncol = 2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
foo = profile_similarity(fitted_lpa)
foo = fitted_lpa$profile_similarity()
foo
foo$most_similar_pair
as.vector(foo$most_similar_pair)
c(foo$most_similar_pair)
c(foo$most_similar_pair[1], foo$most_similar_pair[2])
c(foo$most_similar_pair[[1]], foo$most_similar_pair[[2]])
library(dpm.lpa)
foo = profile_similarity(fitted_lpa)
# devtools::install(dependencies = TRUE, build_vignettes = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.dim = c(4, 4))
library(dpm.lpa)
#update_python_packages()
data(lpa_example_data)
fitted_lpa = fit_dpm_lpa(x = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit', 'nback_picture')])
plot_lpa_residuals(fitted_lpa, ncol = 2)
lpa_residual_correlations(fitted_lpa)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
plot_lpa_residuals(fitted_lpa_v2, ncol = 2)
lpa_residual_correlations(fitted_lpa_v2)
print_lpa_summary(fitted_lpa_v2)
plot_profile_means(fitted_lpa_v2)
plot_profile_probs(fitted_lpa_v2)
profiles = extract_profiles(fitted_lpa_v2)
head(profiles)
soft_profiles = extract_profiles(fitted_lpa_v2, profile_probs = TRUE)
head(soft_profiles)
foo = profile_similarity(fitted_lpa_v2)
devtools::install(dependencies = TRUE, build_vignettes = TRUE)
browseVignettes('dpm.lpa')
devtools::build_vignettes()
dbinom(x = 0:4, size = 4, prob = 0.7)
dbinom(x = 0:4, size = 4, prob = 0.7)
sum(dbinom(x = 0:4, size = 4, prob = 0.7))
pbinom(x = 0:4, size = 4, prob = 0.7)
pbinom(q = 0:4, size = 4, prob = 0.7)
sum(dbinom(x = 0:4, size = 4, prob = 0.7)[1:2])
sum(dbinom(x = 0:4, size = 4, prob = 0.7)[1:3])
sum(dbinom(x = 0:4, size = 4, prob = 0.7)*0:4)
dbinom(x = 0:4, size = 4, prob = 0.7)
dbinom(x = 0:4, size = 4, prob = 0.7)*seq(0, 4)
sum(dbinom(x = 0:4, size = 4, prob = 0.7)*seq(0, 4))
devtools::build_vignettes()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(dpm.lpa)
data(lpa_example_data)
x_v2 = lpa_example_data[, c('wcst', 'stroop', 'trail_making', 'nback_digit')] # drop nback_picture
x_v2$trail_making = log(x_v2$trail_making) # log-transform trail_making
x_v2 = as.data.frame(scale(x_v2)) # scale, i.e. z-score
fitted_lpa_v2 = fit_dpm_lpa(x = x_v2)
result = outcome_analysis_normal(model = fitted_lpa_v2,
y = lpa_example_data[, c('math', 'reading', 'gym')])
result$bayes_factors
result$plot
result$plot_df
devtools::build_vignettes()
.Last.error
devtools::build_vignettes()
devtools::release()
?lnorm
??lnorm
?plnorm
plnorm(2, 0.2, 0.5) - plnorm(0.5, 0.2, 0.5)
plnorm(2, 0.2, 0.5)
plnorm(2, 0.2, 0.5) - plnorm(0.5, 0.2, 0.5)
plnorm(4, 0.2, 0.5) - plnorm(2.5, 0.2, 0.5)
plnorm(4, 0.2, 0.5) - plnorm(1, 0.2, 0.5)
plnorm(2, 0.2, 0.5) - plnorm(1, 0.2, 0.5)
round(plnorm(2, 0.2, 0.5) - plnorm(1, 0.2, 0.5), 2)
round(plnorm(3, 0.2, 0.5) - plnorm(2, 0.2, 0.5), 2)
round(plnorm(4, 0.2, 0.5) - plnorm(3, 0.2, 0.5), 2)
round(plnorm(1, 0.2, 0.5)
,2)
0.34 + 0.49 + 0.13 + 0.03
round(plnorm(1, 0.2, 0.5), 4)
round(plnorm(4, 0.2, 0.5) - plnorm(3, 0.2, 0.5), 4)
round(plnorm(3, 0.2, 0.5) - plnorm(2, 0.2, 0.5), 4)
round(plnorm(2, 0.2, 0.5) - plnorm(1, 0.2, 0.5), 4)
round(plnorm(1.0, 0.2, 0.5) - plnorm(0.5, 0.2, 0.5), 4)
round(plnorm(1.5, 0.2, 0.5) - plnorm(1.0, 0.2, 0.5), 4)
round(plnorm(2.0, 0.2, 0.5) - plnorm(1.5, 0.2, 0.5), 4)
round(plnorm(2.5, 0.2, 0.5) - plnorm(2.0, 0.2, 0.5), 4)
round(plnorm(3.0, 0.2, 0.5) - plnorm(2.5, 0.2, 0.5), 4)
round(plnorm(3.5, 0.2, 0.5) - plnorm(3.0, 0.2, 0.5), 4)
round(plnorm(4.0, 0.2, 0.5) - plnorm(3.5, 0.2, 0.5), 4)
round(plnorm(0.5, 0.2, 0.5))
round(plnorm(0.5, 0.2, 0.5), 4)
dbinom(0:8, 8, 0.5)
library(devtools)
use_package(ggplot2)
use_package('ggplot2')
build_all()
load_all()
library(dpm.lpa)
library(dpm.lpa)
library(dpm.lpa)
library(dpm.lpa)
library(dpm.lpa)
library(dpm.lpa)
library(dpm.lpa)
devtools::build_vignettes()
devtools::build_vignettes()
library(dpm.lpa)
dpois(0:5, 1)
ppois(0.5, 1)
qpois(0.5, 1)
qpois(0.4, 1)
0.0081 + 0.0756 + 0.2646
1 - 0.3483
0.0756 + 0.2646 + 0.4116
